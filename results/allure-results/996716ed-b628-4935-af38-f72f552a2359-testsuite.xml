<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1748356052899' stop='1748356055727'>
    <name>[REGRESSION] Get servers endpoint</name>
    <title>[REGRESSION] Get servers endpoint</title>
    <test-cases>
        <test-case start='1748356052899' status='passed' stop='1748356053080'>
            <name>should limit server count returned when filter is used</name>
            <title>should limit server count returned when filter is used</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356053080' status='passed' stop='1748356053277'>
            <name>should return empty array when filters do not match any server</name>
            <title>should return empty array when filters do not match any server</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356053278' status='passed' stop='1748356053577'>
            <name>should return proper server object structure for every returned server</name>
            <title>should return proper server object structure for every returned server</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356053578' status='passed' stop='1748356053867'>
            <name>should return corresponding server list when searcing by group identifier</name>
            <title>should return corresponding server list when searcing by group identifier</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356053868' status='passed' stop='1748356054136'>
            <name>should return corresponding server list when searcing by group id</name>
            <title>should return corresponding server list when searcing by group id</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356054136' status='passed' stop='1748356054427'>
            <name>should return corresponding server list when searcing by technology identifier</name>
            <title>should return corresponding server list when searcing by technology identifier</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356054428' status='passed' stop='1748356054710'>
            <name>should return corresponding server list when searcing by technology id</name>
            <title>should return corresponding server list when searcing by technology id</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356054710' status='passed' stop='1748356054948'>
            <name>should return corresponding list of servers when searcing by technology pivot status</name>
            <title>should return corresponding list of servers when searcing by technology pivot status</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356054948' status='passed' stop='1748356055241'>
            <name>should return corresponding server list when searcing by technology and group id</name>
            <title>should return corresponding server list when searcing by technology and group id</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356055241' status='passed' stop='1748356055550'>
            <name>Group object parameters shouldn't be the same as it's nested type parameters in Meshnet servers</name>
            <title>Group object parameters shouldn't be the same as it's nested type parameters in Meshnet servers</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
        <test-case start='1748356055551' status='passed' stop='1748356055726'>
            <name>Group object parameters shouldn't be the same as it's nested type parameters in VPN servers</name>
            <title>Group object parameters shouldn't be the same as it's nested type parameters in VPN servers</title>
            <labels/>
            <parameters/>
            <steps/>
            <attachments/>
        </test-case>
    </test-cases>
</ns2:test-suite>